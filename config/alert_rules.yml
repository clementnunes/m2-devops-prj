groups:
  - name: JVMMemory
    rules:
      - alert: JVMMemoryThresholdCrossed
        # Condition for alerting
        expr: jvm_memory_committed_bytes{region="heap"}/jvm_memory_max_bytes{region="heap"} > 0.8
        # Annotation - additional informational labels to store more information
        annotations:
          title: 'Instance  has crossed 80% heap memory usage'
          description: ' of job  has crossed 80% heap memory usage'
        # Labels - additional labels to be attached to the alert
        labels:
          severity: 'critical'
      # Alert for any instance that is unreachable for >5 minutes.
      - alert: InstanceDown
        expr: up == 0
        for: 5m
        labels:
          severity: page
        annotations:
          summary: "Instance {{ $labels.instance }} down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."

      # Alert for any instance that has a median request latency >1s.
      - alert: APIHighRequestLatency
        expr: api_http_request_latencies_second{quantile="0.5"} > 1
        for: 10m
        annotations:
          summary: "High request latency on {{ $labels.instance }}"
          description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"